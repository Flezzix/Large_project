name: Deploy to Lambda

# On push to the backend folder, Pull Requests, or main branch
on:
  push:
  #   paths:
  #     - "backend/**"
  #   branches:
  #     - main
  # pull_request:
  #   paths:
  #     - "backend/**"
  #   branches:
  #     - main

jobs:
  build_and_deploy:
    name: Build and Deploy Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Build Express.js project
        run: cd backend && npm install && npm run build && zip -r backend.zip dist && mv backend.zip ../

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to AWS Lambda
        id: deploy
        run: |
          response=$(aws lambda update-function-code --function-name cop4331-express-lambda --zip-file fileb://backend.zip)
          codeSha256=$(echo $response | jq -r '.CodeSha256')
          revisionId=$(echo $response | jq -r '.RevisionId')
          echo "::set-output name=codeSha256::$codeSha256"
          echo "::set-output name=revisionId::$revisionId"

      - name: Publish Lambda Version
        run: |
          response=$(aws lambda publish-version --function-name cop4331-express-lambda --code-sha256 ${{ steps.deploy.outputs.codeSha256 }} --revision-id ${{ steps.deploy.outputs.revisionId }})
          Version=$(echo $response | jq -r '.Version')
          echo "::set-output name=Version::$Version"
        id: publish

      - name: Check if Lambda Alias Exists
        run: aws lambda get-alias --function-name cop4331-express-lambda --name ${{ github.ref }} || echo "::set-output name=alias_exists::false"
        id: alias_exists

      - name: Create Lambda Alias
        if: steps.alias_exists.outputs.alias_exists == 'false'
        run: aws lambda create-alias --function-name cop4331-express-lambda --function-version ${{ steps.publish.outputs.Version }} --name ${{ github.ref }}
        id: alias

      - name: Update Lambda Alias
        if: steps.alias_exists.outputs.alias_exists == 'true'
        run: aws lambda update-alias --function-name cop4331-express-lambda --function-version ${{ steps.publish.outputs.Version }} --name ${{ github.ref }}
        id: update_alias
